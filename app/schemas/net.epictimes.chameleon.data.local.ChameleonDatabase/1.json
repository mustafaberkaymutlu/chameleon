{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "4069389f958467dcfd74502337b81bac",
    "entities": [
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` INTEGER NOT NULL, `userName` TEXT, `firstName` TEXT, `lastName` TEXT, `city` TEXT, `country` TEXT, `userType` INTEGER, `fullName` TEXT, `userPicUrl` TEXT, `userPicHttpsUrl` TEXT, `coverUrl` TEXT, `upgradeStatus` INTEGER, `storeOn` INTEGER, `affection` INTEGER, PRIMARY KEY(`userId`))",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userName",
            "columnName": "userName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "country",
            "columnName": "country",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userType",
            "columnName": "userType",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "fullName",
            "columnName": "fullName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userPicUrl",
            "columnName": "userPicUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userPicHttpsUrl",
            "columnName": "userPicHttpsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coverUrl",
            "columnName": "coverUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "upgradeStatus",
            "columnName": "upgradeStatus",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "storeOn",
            "columnName": "storeOn",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "affection",
            "columnName": "affection",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "userId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "photos",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`photoId` INTEGER NOT NULL, `userId` INTEGER, `name` TEXT, `description` TEXT, `camera` TEXT, `lens` TEXT, `focalLength` TEXT, `iso` TEXT, `shutterSpeed` TEXT, `aperture` TEXT, `timesViewed` INTEGER, `rating` INTEGER, `status` INTEGER, `createdAt` TEXT, `category` INTEGER, `latitude` REAL, `longitude` REAL, `takenAt` TEXT, `hiResUploaded` INTEGER, `forSale` INTEGER, `width` INTEGER, `height` INTEGER, `votesCount` INTEGER, `favoritesCount` INTEGER, `commentsCount` INTEGER, `nsfw` INTEGER, `salesCount` INTEGER, `highestRating` INTEGER, `licenseType` INTEGER, `converted` INTEGER, `collectionsCount` INTEGER, `cropVersion` INTEGER, `privacy` INTEGER, `profile` INTEGER, `forCritique` INTEGER, `critiquesCalloutDismissed` INTEGER, `imageUrl` TEXT, `url` TEXT, `positiveVotesCount` INTEGER, `convertedBits` INTEGER, `watermark` INTEGER, `imageFormat` TEXT, `licensingRequested` INTEGER, `licensingSuggested` INTEGER, `isFreePhoto` INTEGER, PRIMARY KEY(`photoId`), FOREIGN KEY(`userId`) REFERENCES `users`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "photoId",
            "columnName": "photoId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "camera",
            "columnName": "camera",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lens",
            "columnName": "lens",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "focalLength",
            "columnName": "focalLength",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "iso",
            "columnName": "iso",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "shutterSpeed",
            "columnName": "shutterSpeed",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "aperture",
            "columnName": "aperture",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timesViewed",
            "columnName": "timesViewed",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "rating",
            "columnName": "rating",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "category",
            "columnName": "category",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "latitude",
            "columnName": "latitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "longitude",
            "columnName": "longitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "takenAt",
            "columnName": "takenAt",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hiResUploaded",
            "columnName": "hiResUploaded",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "forSale",
            "columnName": "forSale",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "width",
            "columnName": "width",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "height",
            "columnName": "height",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "votesCount",
            "columnName": "votesCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "favoritesCount",
            "columnName": "favoritesCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "commentsCount",
            "columnName": "commentsCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "nsfw",
            "columnName": "nsfw",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "salesCount",
            "columnName": "salesCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "highestRating",
            "columnName": "highestRating",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "licenseType",
            "columnName": "licenseType",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "converted",
            "columnName": "converted",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "collectionsCount",
            "columnName": "collectionsCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "cropVersion",
            "columnName": "cropVersion",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "privacy",
            "columnName": "privacy",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "profile",
            "columnName": "profile",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "forCritique",
            "columnName": "forCritique",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "critiquesCalloutDismissed",
            "columnName": "critiquesCalloutDismissed",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "positiveVotesCount",
            "columnName": "positiveVotesCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "convertedBits",
            "columnName": "convertedBits",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "watermark",
            "columnName": "watermark",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "imageFormat",
            "columnName": "imageFormat",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "licensingRequested",
            "columnName": "licensingRequested",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "licensingSuggested",
            "columnName": "licensingSuggested",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isFreePhoto",
            "columnName": "isFreePhoto",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "photoId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, \"4069389f958467dcfd74502337b81bac\")"
    ]
  }
}